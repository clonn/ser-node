// Generated by CoffeeScript 1.9.3
var SerNode, config, request, url;

config = require("./config.json");

request = require("request");

url = require("url");

SerNode = (function() {
  function SerNode(options) {
    this.id = options.id;
    this.secret_key = options.secret_key;
    this.config = options.config || config;
    return this;
  }

  SerNode.prototype.getRequestUrl = function(urlparam) {
    var that;
    that = this;
    return url.resolve(that.config.endpoint, urlparam);
  };

  SerNode.prototype.getToken = function() {
    var promise, that;
    that = this;
    promise = new Promise(function(resolve, reject) {
      var requestForm, requestUrl;
      requestUrl = that.getRequestUrl("user/get_token");
      console.log(requestUrl);
      requestForm = {
        id: that.id,
        secret_key: that.secret_key
      };
      return request.post({
        url: requestUrl,
        form: requestForm
      }, function(err, res, body) {
        var result;
        if (err) {
          return reject(err);
        }
        result = JSON.parse(body);
        if (!result.result.token) {
          return reject(result);
        }
        that.token = result.result.token;
        return resolve(result);
      });
    });
    return promise;
  };

  SerNode.prototype.user = require("./user");

  SerNode.prototype.request = function(url, params) {
    var promise, that;
    that = this;
    promise = new Promise(function(resolve, reject) {
      var requestForm, requestUrl;
      requestUrl = that.getRequestUrl(url);
      requestForm = params;
      requestForm.token = that.token;
      return request.post({
        url: requestUrl,
        form: requestForm
      }, function(err, res, body) {
        var result;
        if (err) {
          return reject(err);
        }
        result = JSON.parse(body);
        return resolve(result);
      });
    });
    return promise;
  };

  return SerNode;

})();

module.exports = SerNode;
